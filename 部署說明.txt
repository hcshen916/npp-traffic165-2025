================================================================
交通事故數據系統 - GCP VM 快速部署說明
================================================================

✅ 我已經為您建立了完整的 GCP VM 部署方案！

================================================================
📦 新增的檔案清單
================================================================

🔧 可執行腳本 (3 個):
  1. setup-gcp-vm.sh      - 一鍵自動部署腳本
  2. create-env.sh         - 快速建立 .env 環境變數
  3. check-services.sh     - 服務健康檢查腳本

📄 說明文檔 (6 個):
  1. START_HERE.md              - 🌟 從這裡開始！最簡單的指引
  2. DEPLOY_GCP.md              - 完整的 GCP 部署指南
  3. README_DEPLOYMENT.md       - 快速部署說明
  4. DEPLOYMENT_CHECKLIST.md    - 部署檢查清單
  5. QUICK_ENV_SETUP.txt        - 環境變數快速設定指令
  6. README.md                  - 專案完整說明

🔒 安全檔案:
  1. .gitignore               - 防止敏感檔案被提交到 Git

================================================================
🚀 最簡單的 3 步驟部署
================================================================

步驟 1: 上傳專案到 VM
─────────────────────
在本機執行:
  gcloud compute scp --recurse . YOUR_VM_NAME:~/npp-traffic165-2025 --zone=YOUR_ZONE

或在 VM 執行:
  git clone YOUR_REPO_URL
  cd npp-traffic165-2025


步驟 2: 建立環境變數 (.env 檔案)
───────────────────────────────
在 VM 的專案目錄執行:
  bash create-env.sh

這會自動生成包含所有隨機密碼的 .env 檔案！


步驟 3: 執行自動部署
───────────────────
  sudo bash setup-gcp-vm.sh

腳本會自動完成:
  ✅ 安裝 Docker 和 Docker Compose
  ✅ 建立必要的目錄
  ✅ 啟動所有服務 (MySQL, Redis, Backend, CMS, Frontend, Worker)
  ✅ 初始化資料庫
  ✅ 配置防火牆

預計時間: 10-15 分鐘


================================================================
🌐 部署完成後
================================================================

1. 取得您的 VM IP:
   curl ifconfig.me

2. 在瀏覽器訪問:
   • Frontend:  http://YOUR_VM_IP:3000
   • Backend:   http://YOUR_VM_IP:8000/docs
   • CMS:       http://YOUR_VM_IP:1337/admin

3. 設定 CMS 管理員:
   首次訪問 CMS 時需要建立管理員帳號

================================================================
⚙️ GCP 防火牆設定 (重要！)
================================================================

在 GCP Console → VPC 網路 → 防火牆規則，開放:
  • TCP Port 3000 (Frontend)
  • TCP Port 8000 (Backend)
  • TCP Port 1337 (CMS)

================================================================
🔧 如需外部訪問 (選用)
================================================================

1. 編輯 .env 檔案:
   nano .env

2. 修改以下兩行 (將 localhost 改為您的 VM IP):
   NEXT_PUBLIC_API_BASE=http://YOUR_VM_IP:8000
   NEXT_PUBLIC_CMS_BASE=http://YOUR_VM_IP:1337

3. 重啟前端:
   docker compose restart frontend

================================================================
🔍 驗證部署
================================================================

執行健康檢查:
  bash check-services.sh

查看服務狀態:
  docker compose ps

查看日誌:
  docker compose logs -f

================================================================
📚 詳細文檔
================================================================

建議閱讀順序:
  1. START_HERE.md          - 最簡單的快速指引
  2. DEPLOY_GCP.md          - 詳細的部署說明
  3. DEPLOYMENT_CHECKLIST.md - 完整的檢查清單

================================================================
🛠️ 常用管理命令
================================================================

# 服務管理
docker compose ps              # 查看服務狀態
docker compose logs -f         # 查看即時日誌
docker compose restart backend # 重啟特定服務
docker compose down            # 停止所有服務
docker compose up -d           # 啟動所有服務

# 健康檢查
bash check-services.sh         # 完整健康檢查

# 資料庫
docker exec -it traffic-mysql mysql -uroot -p  # 進入 MySQL

================================================================
🆘 遇到問題？
================================================================

1. 執行健康檢查:
   bash check-services.sh

2. 查看日誌:
   docker compose logs

3. 參考詳細文檔:
   DEPLOY_GCP.md 中的「故障排除」章節

================================================================

🎉 就這麼簡單！祝您部署順利！

如有任何問題，請參考 START_HERE.md 或 DEPLOY_GCP.md

================================================================

